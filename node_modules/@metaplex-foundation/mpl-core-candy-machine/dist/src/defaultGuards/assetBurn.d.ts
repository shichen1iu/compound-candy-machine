import { PublicKey } from '@metaplex-foundation/umi';
import { AssetBurn, AssetBurnArgs } from '../generated';
import { GuardManifest } from '../guards';
/**
 * The assetBurn guard allows minting by burning the
 * minter a Core Asset from a specified collection.
 * The asset will be burned.
 *
 * This means the mint address of the asset to transfer must be
 * passed when minting. This guard alone does not limit how many
 * times a holder can mint. A holder can mint as many times
 * as they have assets from the required collection to pay with.
 */
export declare const assetBurnGuardManifest: GuardManifest<AssetBurnArgs, AssetBurn, AssetBurnMintArgs>;
export declare type AssetBurnMintArgs = AssetBurnArgs & {
    /**
     * The address of the asset to pay with.
     * This must be part of the required collection and must
     * belong to the payer.
     */
    asset: PublicKey;
};
