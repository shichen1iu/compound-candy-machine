"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assetBurnGuardManifest = void 0;
const generated_1 = require("../generated");
const guards_1 = require("../guards");
/**
 * The assetBurn guard allows minting by burning the
 * minter a Core Asset from a specified collection.
 * The asset will be burned.
 *
 * This means the mint address of the asset to transfer must be
 * passed when minting. This guard alone does not limit how many
 * times a holder can mint. A holder can mint as many times
 * as they have assets from the required collection to pay with.
 */
exports.assetBurnGuardManifest = {
    name: 'assetBurn',
    serializer: generated_1.getAssetBurnSerializer,
    mintParser: (context, mintContext, args) => {
        const remainingAccounts = [
            { publicKey: args.asset, isWritable: true },
            { publicKey: args.requiredCollection, isWritable: true },
        ];
        return { data: new Uint8Array(), remainingAccounts };
    },
    routeParser: guards_1.noopParser,
};
//# sourceMappingURL=assetBurn.js.map