"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMplCoreCandyGuardProgramId = exports.getMplCoreCandyGuardProgram = exports.createMplCoreCandyGuardProgram = exports.MPL_CORE_CANDY_GUARD_PROGRAM_ID = void 0;
const errors_1 = require("../errors");
exports.MPL_CORE_CANDY_GUARD_PROGRAM_ID = 'CMAGAKJ67e9hRZgfC5SFTbZH8MgEmtqazKXjmkaJjWTJ';
function createMplCoreCandyGuardProgram() {
    return {
        name: 'mplCoreCandyGuard',
        publicKey: exports.MPL_CORE_CANDY_GUARD_PROGRAM_ID,
        getErrorFromCode(code, cause) {
            return (0, errors_1.getMplCoreCandyGuardErrorFromCode)(code, this, cause);
        },
        getErrorFromName(name, cause) {
            return (0, errors_1.getMplCoreCandyGuardErrorFromName)(name, this, cause);
        },
        isOnCluster() {
            return true;
        },
    };
}
exports.createMplCoreCandyGuardProgram = createMplCoreCandyGuardProgram;
function getMplCoreCandyGuardProgram(context, clusterFilter) {
    return context.programs.get('mplCoreCandyGuard', clusterFilter);
}
exports.getMplCoreCandyGuardProgram = getMplCoreCandyGuardProgram;
function getMplCoreCandyGuardProgramId(context, clusterFilter) {
    return context.programs.getPublicKey('mplCoreCandyGuard', exports.MPL_CORE_CANDY_GUARD_PROGRAM_ID, clusterFilter);
}
exports.getMplCoreCandyGuardProgramId = getMplCoreCandyGuardProgramId;
//# sourceMappingURL=mplCoreCandyGuard.js.map